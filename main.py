import logging
import asyncio
import json
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command

# üîπ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π!)
TOKEN = "7600848578:AAH__wUdYmeRYZ751qNssAs8x_K1ubn2mJE"

# üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# üîπ –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–Ω–µ –º–µ–Ω—è—é "–ö–æ–Ω—Ç–∞–∫—Ç—ã"!)
menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="ü©∫ –¢–µ—Ä–∞–ø–µ–≤—Ç"), KeyboardButton(text="ü¶∑ –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è")],
        [KeyboardButton(text="üëÅ –û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—è"), KeyboardButton(text="‚ù§Ô∏è –ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è")],
        [KeyboardButton(text="üìû –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"), KeyboardButton(text="üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã")]
    ],
    resize_keyboard=True
)

# üîπ –ë–∞–∑–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
SCENARIOS = {
    "—Ç–µ—Ä–∞–ø–µ–≤—Ç": ["—Ç–µ—Ä–∞–ø–µ–≤—Ç", "–≤—Ä–∞—á", "–ø—Ä–æ—Å—Ç—É–¥–∞", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–±–æ–ª–∏—Ç –≥–æ—Ä–ª–æ"],
    "—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è": ["—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥", "–∑—É–±", "–±–æ–ª–∏—Ç –∑—É–±", "–∫–∞—Ä–∏–µ—Å", "–∑—É–±–Ω–æ–π"],
    "–æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—è": ["–æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥", "–≥–ª–∞–∑", "–∑—Ä–µ–Ω–∏–µ", "–ø–ª–æ—Ö–æ –≤–∏–∂—É"],
    "–∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è": ["–∫–∞—Ä–¥–∏–æ–ª–æ–≥", "—Å–µ—Ä–¥—Ü–µ", "–¥–∞–≤–ª–µ–Ω–∏–µ", "—Ç–∞—Ö–∏–∫–∞—Ä–¥–∏—è"]
}

RESPONSES = {
    "—Ç–µ—Ä–∞–ø–µ–≤—Ç": "–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –∫ —Ç–µ—Ä–∞–ø–µ–≤—Ç—É! –í—Ä–∞—á —Å–∫–æ—Ä–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è.",
    "—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è": "ü¶∑ –í–∞—Å –ø–µ—Ä–µ–≤–µ–ª–∏ –≤ –æ—Ç–¥–µ–ª —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.",
    "–æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—è": "üëÅ –í–∞—Å –ø–µ—Ä–µ–≤–µ–ª–∏ –≤ –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—é. –í—Ä–∞—á —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
    "–∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è": "‚ù§Ô∏è –í–∞—Å –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏ –Ω–∞ –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.",
    "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä": "üìû –°–µ–π—á–∞—Å –í–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
    "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ": "üìû –°–µ–π—á–∞—Å —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
    "–∫–æ–Ω—Ç–∞–∫—Ç—ã": "üìå –ê–¥—Ä–µ—Å –∫–ª–∏–Ω–∏–∫–∏: —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 10. –¢–µ–ª–µ—Ñ–æ–Ω: +7 (900) 123-45-67."
}

# üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã FAQ
def load_faq():
    try:
        with open("faq.json", "r", encoding="utf-8") as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError) as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ FAQ: {e}")
        return {}

# üîπ –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("üëã –î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ö–∞–∫–æ–π —É –≤–∞—Å –≤–æ–ø—Ä–æ—Å?", reply_markup=menu)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìû –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
@dp.message(lambda message: message.text == "üìû –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
async def admin_contact(message: types.Message):
    await message.answer(RESPONSES["–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"])
    await message.answer("–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–∑ –º–µ–Ω—é.", reply_markup=menu)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã"
@dp.message(lambda message: message.text == "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts_info(message: types.Message):
    await message.answer(RESPONSES["–∫–æ–Ω—Ç–∞–∫—Ç—ã"])
    await message.answer("–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–∑ –º–µ–Ω—é.", reply_markup=menu)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–∏—Å–∫ –≤—Ä–∞—á–∞ –∏–ª–∏ –≤—ã–∑–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
@dp.message()
async def handle_user_message(message: types.Message):
    user_message = message.text.lower().strip()
    faq = load_faq()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º FAQ
    if user_message in faq:
        await message.answer(faq[user_message])
        await message.answer("–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–∑ –º–µ–Ω—é.", reply_markup=menu)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≤ –±–∞–∑–µ
    for specialist, keywords in SCENARIOS.items():
        if any(keyword in user_message for keyword in keywords):
            await message.answer(RESPONSES[specialist])
            await message.answer("–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–∑ –º–µ–Ω—é.", reply_markup=menu)
            return

    # –ï—Å–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    await message.answer(RESPONSES["–Ω–µ –Ω–∞–π–¥–µ–Ω–æ"])
    await message.answer("–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–∑ –º–µ–Ω—é.", reply_markup=menu)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é

# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())